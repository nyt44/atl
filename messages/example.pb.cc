// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#include "example.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace example {
class ExponentiationArgsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExponentiationArgs> _instance;
} _ExponentiationArgs_default_instance_;
class ExponentiationResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExponentiationResult> _instance;
} _ExponentiationResult_default_instance_;
}  // namespace example
static void InitDefaultsscc_info_ExponentiationArgs_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::example::_ExponentiationArgs_default_instance_;
    new (ptr) ::example::ExponentiationArgs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::example::ExponentiationArgs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExponentiationArgs_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExponentiationArgs_example_2eproto}, {}};

static void InitDefaultsscc_info_ExponentiationResult_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::example::_ExponentiationResult_default_instance_;
    new (ptr) ::example::ExponentiationResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::example::ExponentiationResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExponentiationResult_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExponentiationResult_example_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_example_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_example_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_example_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_example_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::example::ExponentiationArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::example::ExponentiationArgs, base_),
  PROTOBUF_FIELD_OFFSET(::example::ExponentiationArgs, exponent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::example::ExponentiationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::example::ExponentiationResult, success_),
  PROTOBUF_FIELD_OFFSET(::example::ExponentiationResult, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::example::ExponentiationArgs)},
  { 7, -1, sizeof(::example::ExponentiationResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::example::_ExponentiationArgs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::example::_ExponentiationResult_default_instance_),
};

const char descriptor_table_protodef_example_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rexample.proto\022\007example\"4\n\022Exponentiati"
  "onArgs\022\014\n\004base\030\001 \001(\005\022\020\n\010exponent\030\002 \001(\005\"7"
  "\n\024ExponentiationResult\022\017\n\007success\030\001 \001(\010\022"
  "\016\n\006result\030\002 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_example_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_example_2eproto_sccs[2] = {
  &scc_info_ExponentiationArgs_example_2eproto.base,
  &scc_info_ExponentiationResult_example_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_example_2eproto_once;
static bool descriptor_table_example_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_example_2eproto = {
  &descriptor_table_example_2eproto_initialized, descriptor_table_protodef_example_2eproto, "example.proto", 143,
  &descriptor_table_example_2eproto_once, descriptor_table_example_2eproto_sccs, descriptor_table_example_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_example_2eproto::offsets,
  file_level_metadata_example_2eproto, 2, file_level_enum_descriptors_example_2eproto, file_level_service_descriptors_example_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_example_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_example_2eproto), true);
namespace example {

// ===================================================================

void ExponentiationArgs::InitAsDefaultInstance() {
}
class ExponentiationArgs::_Internal {
 public:
};

ExponentiationArgs::ExponentiationArgs()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.ExponentiationArgs)
}
ExponentiationArgs::ExponentiationArgs(const ExponentiationArgs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&base_, &from.base_,
    static_cast<size_t>(reinterpret_cast<char*>(&exponent_) -
    reinterpret_cast<char*>(&base_)) + sizeof(exponent_));
  // @@protoc_insertion_point(copy_constructor:example.ExponentiationArgs)
}

void ExponentiationArgs::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exponent_) -
      reinterpret_cast<char*>(&base_)) + sizeof(exponent_));
}

ExponentiationArgs::~ExponentiationArgs() {
  // @@protoc_insertion_point(destructor:example.ExponentiationArgs)
  SharedDtor();
}

void ExponentiationArgs::SharedDtor() {
}

void ExponentiationArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExponentiationArgs& ExponentiationArgs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExponentiationArgs_example_2eproto.base);
  return *internal_default_instance();
}


void ExponentiationArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:example.ExponentiationArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exponent_) -
      reinterpret_cast<char*>(&base_)) + sizeof(exponent_));
  _internal_metadata_.Clear();
}

const char* ExponentiationArgs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          base_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 exponent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          exponent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExponentiationArgs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.ExponentiationArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 base = 1;
  if (this->base() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_base(), target);
  }

  // int32 exponent = 2;
  if (this->exponent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_exponent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.ExponentiationArgs)
  return target;
}

size_t ExponentiationArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.ExponentiationArgs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 base = 1;
  if (this->base() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_base());
  }

  // int32 exponent = 2;
  if (this->exponent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_exponent());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExponentiationArgs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example.ExponentiationArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const ExponentiationArgs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExponentiationArgs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example.ExponentiationArgs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example.ExponentiationArgs)
    MergeFrom(*source);
  }
}

void ExponentiationArgs::MergeFrom(const ExponentiationArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example.ExponentiationArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base() != 0) {
    _internal_set_base(from._internal_base());
  }
  if (from.exponent() != 0) {
    _internal_set_exponent(from._internal_exponent());
  }
}

void ExponentiationArgs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example.ExponentiationArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExponentiationArgs::CopyFrom(const ExponentiationArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.ExponentiationArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExponentiationArgs::IsInitialized() const {
  return true;
}

void ExponentiationArgs::InternalSwap(ExponentiationArgs* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(base_, other->base_);
  swap(exponent_, other->exponent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExponentiationArgs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExponentiationResult::InitAsDefaultInstance() {
}
class ExponentiationResult::_Internal {
 public:
};

ExponentiationResult::ExponentiationResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.ExponentiationResult)
}
ExponentiationResult::ExponentiationResult(const ExponentiationResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&success_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:example.ExponentiationResult)
}

void ExponentiationResult::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&success_)) + sizeof(result_));
}

ExponentiationResult::~ExponentiationResult() {
  // @@protoc_insertion_point(destructor:example.ExponentiationResult)
  SharedDtor();
}

void ExponentiationResult::SharedDtor() {
}

void ExponentiationResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExponentiationResult& ExponentiationResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExponentiationResult_example_2eproto.base);
  return *internal_default_instance();
}


void ExponentiationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:example.ExponentiationResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&success_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

const char* ExponentiationResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExponentiationResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.ExponentiationResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.ExponentiationResult)
  return target;
}

size_t ExponentiationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.ExponentiationResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExponentiationResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example.ExponentiationResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ExponentiationResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExponentiationResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example.ExponentiationResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example.ExponentiationResult)
    MergeFrom(*source);
  }
}

void ExponentiationResult::MergeFrom(const ExponentiationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example.ExponentiationResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ExponentiationResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example.ExponentiationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExponentiationResult::CopyFrom(const ExponentiationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.ExponentiationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExponentiationResult::IsInitialized() const {
  return true;
}

void ExponentiationResult::InternalSwap(ExponentiationResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExponentiationResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace example
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::example::ExponentiationArgs* Arena::CreateMaybeMessage< ::example::ExponentiationArgs >(Arena* arena) {
  return Arena::CreateInternal< ::example::ExponentiationArgs >(arena);
}
template<> PROTOBUF_NOINLINE ::example::ExponentiationResult* Arena::CreateMaybeMessage< ::example::ExponentiationResult >(Arena* arena) {
  return Arena::CreateInternal< ::example::ExponentiationResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
